% Copyright (c) Andrei Semenov, 1996-2001.


do_if CPV==on.

parameter Mh1=slhaVal1(str(MASS),Q,25),
          Mh2=slhaVal1(str(MASS),Q,35),
          Mh3=slhaVal1(str(MASS),Q,36),
		  MHc=slhaVal1(str(MASS),Q,37).
_x=1-2, _y=1-3 in parameter Zh_x_y=slhaVal2(str(CVHMIX),Q,_y,_x).
_y=1-3 in parameter Zh3_y= -sb*slhaVal2(str(CVHMIX),Q,_y,3)
                            +cb*slhaVal2(str(CVHMIX),Q,_y,4).

OrthMatrix(Zh__,3).

%_x=1-4 in parameter dlh_x=-slhaVal1(str(HCOUPLINGS),Q,_x).
_x=1-4 in let dlh_x=0.
_x=5-7 in let dlh_xr=0, dlh_xi=0.

let dh1=2*MW**2/EE**2*SW**2*
     (-2*dlh1*cb**2-dlh3*sb**2-sb**2*dlh4-sb**2*dlh5r
       -3*cb*sb*dlh6r-sb**3/cb*dlh7r ).
let dh2=2*MW**2/EE**2*SW**2*
     (-2*dlh2*sb**2-dlh3*cb**2-cb**2*dlh4-cb**2*dlh5r
       -cb**3/sb*dlh6r-3*cb*sb*dlh7r).


let dhsr= -2/EE**2*MW**2*SW**2*cb*sb*(dlh4+dlh5r+dlh6r*cb/sb+dlh7r*sb/cb).
let dhsi= -2/EE**2*MW**2*SW**2*cb*sb*(dlh5i+dlh6i*cb/sb+dlh7i*sb/cb).


let hsr= -(MHc**2-MW**2)*cb*sb+dhsr.
let hs=hsr+i*dhsi.
let M2_H1= -hsr*sb/cb-(mur**2+mui**2)-MW**2/2/CW**2*(cb**2-sb**2) +dh1.
let M2_H2= -hsr*cb/sb-(mur**2+mui**2)+MW**2/2/CW**2*(cb**2-sb**2) +dh2.

parameter wHc, wh1, wh2, wh3.

do_else_if NMSSM==on. /*  NMSSM case - more higgs fields */

let sa=0, ca=0.

parameter dlh2=slhaVal1(str(NMSSMHLAMBDAS),Q,2).

let  dlh1=0,dlh3=0,dlh4=0,dlh5=0, dlh6=0, dlh7=0, dlh8s=0,dlhss=0,dlh5s=0, dlh1s=0,dlh2s=0.


parameter wh1=0:'Width of 1st Higgs',
          wh2=0:'Width of 2nd higgs',
	      wh3=0:'Width of 3rd Higgs',
          wha=0:'Width of higgs A1',
	      whb=0:'Width of Higgs A2',
	      wHc=0:'Width of charged Higgs'.

%do_if MMCALC==slha.

parameter Mh1=slhaVal1(str(MASS),Q,25),
          Mh2=slhaVal1(str(MASS),Q,35),
          Mh3=slhaVal1(str(MASS),Q,45),
          Mha=slhaVal1(str(MASS),Q,36),
          Mhb=slhaVal1(str(MASS),Q,46),
          MHc=slhaVal1(str(MASS),Q,37).

_x=1-3 in _y=1-3 in parameter Zh_x_y=slhaVal2(str(NMHMIX),Q, _y, _x).
_x=1-3 in _y=1-2 in parameter Za_x_y=slhaVal2(str(NMAMIX),Q, _y, _x).
parameter Za13=cb, Za23=-cb, Za33=0.

OrthMatrix({{Zh11, Zh12, Zh13}, {Zh21, Zh22, Zh23}, {Zh31, Zh32, Zh33}}).
OrthMatrix({{Za11, Za12, Za13}, {Za21, Za22, Za23}, {Za31, Za32, Za33}}).


let M2_H1 = -(-2/cb*hL*hLs*sb*xvev
              -2/cb*hK*hL*sb*xvev**2
              +4/EE**2*MW**2*SW**2*hL**2*sb**2
              +2*hL**2*xvev**2
              +1*(1-2*sb**2)/CW**2*MW**2
	      +4/EE**2*MW**2*SW**2*(cb**2*dlh1+sb**2*dlh3+sb**2*dlh4+sb**2*dlh5)+xvev**2*(2*dlh1s-sb/cb*dlh5s))/2.

let M2_H2 = -(-2*cb*hL*hLs/sb*xvev
              -2*cb*hK*hL/sb*xvev**2
              +4/EE**2*MW**2*SW**2*cb**2*hL**2
              +2*hL**2*xvev**2
              -1*(1-2*sb**2)/CW**2*MW**2+4/EE**2*MW**2*SW**2*(sb**2*dlh2+cb**2*dlh3+cb**2*dlh4+cb**2*dlh5)+xvev**2*(2*dlh2s-cb/sb*dlh5s))/2.

let M2_H3 = -( 2*hK*hKs*xvev
              -4/EE**2*MW**2*SW**2*cb*hL*hLs*sb/xvev
              +4*hK**2*xvev**2
              -8/EE**2*MW**2*SW**2*cb*hK*hL*sb
              +4/EE**2*MW**2*SW**2*hL**2+2*xvev**2*dlhss+4/EE**2*MW**2*SW**2*(cb**2*dlh1s+sb**2*dlh2s-cb*sb*dlh5s)+8*xvev**2*dlh8s)/2.


do_else. /* MSSM case */


parameter MH3=slhaVal1(str(MASS),Q,36):'Mass of CP-odd Higgs',
          Mh=slhaVal1(str(MASS),Q,25),
          MHH=slhaVal1(str(MASS),Q,35),
		  MHc=slhaVal1(str(MASS),Q,37).
		  

do_if UFO==1.
parameter   alpha=slhaVal1(str(FRALPHA),Q,1).
do_else.
parameter   alpha=slhaVal0(str(ALPHA),Q).
end_if.

parameter sa=sin(alpha),
		  ca=cos(alpha).
		  
angle sin=sa, cos=ca, texname='\\alpha'.
let ka1=0, ka2=0, ka3=0.

parameter vevv=2*MW**2*SW**2/EE**2.
SetTexName([vevv='\\upsilon']).

parameter s2a=2*sa*ca :     'sin(2a)'.
parameter c2a=ca**2-sa**2.
parameter sapb=sa*cb+ca*sb : 'sin(a+b)'.
parameter samb=sa*cb-ca*sb : 'sin(a-b)'.
parameter capb=ca*cb-sa*sb : 'cos(a+b)'.
parameter camb=ca*cb+sa*sb : 'cos(a-b)'.


parameter  dlh5, dlh6, dlh7.


let dlh4=(MH3**2+MW**2-MHc**2)/vevv+dlh5, 
     dlh1=(Mh**2*sa**2+MHH**2*ca**2-MW**2/CW**2*cb**2-MH3**2*sb**2)
		/4/MW**2/SW**2*EE**2/cb**2 - dlh5*sb**2/cb**2 + 2*sb*dlh6/cb,
     dlh2=(Mh**2*ca**2+MHH**2*sa**2-MW**2/CW**2*sb**2-MH3**2*cb**2)
     		/4/MW**2/SW**2*EE**2/sb**2 - dlh5*cb**2/sb**2 + 2*cb*dlh7/sb,
     dlh3=(-Mh**2*ca*sa+MHH**2*ca*sa+cb*sb*(MW**2/CW**2+MH3**2))
     		/4/MW**2/SW**2*EE**2/cb/sb - dlh4 + dlh6*cb/sb + dlh7*sb/cb.


parameter wh=0 :'Width of light Higgs',
          wHh=0:'Width of heavy higgs',
	  wH3=0:'Width of CP-odd Higgs',
	  wHc=0:'Width of charged Higgs'.


let dh1=2*MW**2/EE**2*SW**2*
     (-dlh1*cb**2-dlh3*sb**2-sb**2*dlh4-sb**2*dlh5
       +3*cb*sb*dlh6+sb**3/cb*dlh7 + 3*ka1*cb**4 +2*cb**2*sb**2*ka3).
let dh2=2*MW**2/EE**2*SW**2*
     (-dlh2*sb**2-dlh3*cb**2-cb**2*dlh4-cb**2*dlh5
       +cb**3/sb*dlh6+3*cb*sb*dlh7 + 3*ka2*sb**4 +cb**4*ka3).

let dhs= -2/EE**2*MW**2*SW**2*cb*sb*(2*dlh5-dlh6*cb/sb-dlh7*sb/cb).


let hs= -MH3**2*cb*sb +dhs.
let M2_H1= -hs*sb/cb-mu**2-MW**2/2/CW**2*(cb**2-sb**2) +dh1.
let M2_H2= -hs*cb/sb-mu**2+MW**2/2/CW**2*(cb**2-sb**2) +dh2.


end_if. % MSSM case
