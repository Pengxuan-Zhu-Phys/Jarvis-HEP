[Scan]
name            :   Birdson_test_04
save dir        :   &J/Results/ 
sampling method :   Birdson
force new run   :   True
rerun tag       :   Free, Running

[Sampling_Setting]
variables       :   X,  Flat, 2.0,  5.0, 0.3
                    Y,  log, 0.01,  10.0, 1.0
min R           :   0.01
likelihood      :   Gauss(Z, 1, 0.2) 
selection       :   (2.0 * X < Y)

[Config]
scheme          :   &J/src/card/preference.json

[Library_Settings]
OS required     :   linux, Darwin
make paraller   :   cpu_count
root required   :   True
root path       :   @C root-config --prefix
python version  :   2.7.3
package path    :   &J/External/Library
include         :   Delphes, HepMC, Pythia8, MadGraph

[Program_Settings]
package path    :   &J/External/Program
make paraller   :   16
include         :   TestFunction, TestMulti

[TestFunction]
run info        :   &J/WorkShop/Program/TestFunction/TestFunction_runweb.json 
required package:   None
clone shadow    :   True
install path    :   &J/WorkShop/Program/TestFunction
source file     :   &J/External/Program/TestFunction/TestFunction.py 
install cmd     :   cp $TestFunction:source file$ $TestFunction:install path$

selection       :   True
prerun command  :   cp &J/External/Program/TestFunction/TestFunction_input.dat $TestFunction:install path$
input file      :   1,  $TestFunction:install path$/TestFunction_input.dat 
#                   varID   fileID  method
input variables :   X,      1,      Position,    1,  1
                    Y,      1,      Position,    1,  2
                    inFile, 1,      File,   save

command path    :   $TestFunction:install path$
excute command  :   rm output.json
                    ./TestFunction.py 
                    rm TestFunction_input.dat

output file     :   1,  $TestFunction:install path$/output.json
#                   varID   fileID  method
output variables:   Z,      1,      Json,   Z
                    ATime,   1,      Json,   Time
                    outFile,1,      File

[TestMulti]
include         :   MMJson, MMNumpy 
install path    :   &J/WorkShop/Program/MMFuncs
run info        :   &J/WorkShop/Program/MMFuncs/MMFuncs_runweb.json 
required package:   None
clone shadow    :   True
source file     :   &J/External/Program/MMFuncs
install cmd     :   cp -r $TestMulti:source file$/* $TestMulti:install path$

[MMJson]
selection       :   (chi21 > 0)
prerun command  :   cp $TestMulti:install path$/card/json_mode_card.json $TestMulti:install path$/mode.json
input file      :   1,  $TestMulti:install path$/test_json_input.json
#                   varID   fileID  method
input variables :   X,      1,      Json,    x
                    Y,      1,      Json,    y
                    MMin01,  1,      File,   save

command path    :   $TestMulti:install path$
excute command  :   rm output.json
                    ./MultiModeFuncs.py 
                    rm test_json_input.dat

output file     :   1,  $TestMulti:install path$/output.json
#                   varID   fileID  method
output variables:   Z01,    1,      Json,   Z
                    MMout01,1,      File,   save

[MMNumpy]
selection       :   (chi21 > 0)
prerun command  :   cp $TestMulti:install path$/card/numpy_mode_card.json $TestMulti:install path$/mode.json
                    cp $TestMulti:source file$/test_numpy_input.dat $TestMulti:install path$/test_numpy_input.dat
input file      :   1,  $TestMulti:install path$/test_numpy_input.dat
#                   varID   fileID  method
input variables :   X,      1,      Position,    1,  1
                    Y,      1,      Position,    1,  2
                    MMin02, 1,      File,   save

command path    :   $TestMulti:install path$
excute command  :   rm output.json
                    ./MultiModeFuncs.py 
                    rm test_numpy_input.dat

output file     :   1,  $TestMulti:install path$/output.json
#                   varID   fileID  method
output variables:   Z02,    1,      Json,   Z
                    MMout02,1,      File,   save

[Function_01]
method          :   expression
name            :   chi21
expression      :   ( X**2 + Y**2 - 1 )**3           

[Function_02]
method          :   interpolate 1d
name            :   Xenon2019SD
file            :   &J/External/Info/Xenon1T2019SD_p.csv