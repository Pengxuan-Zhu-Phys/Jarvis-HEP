[Scan]
name            :   Dynesty_test_01
save dir        :   &J/Results/ 
sampling method :   Dynesty
force new run   :   True
rerun tag       :   Free, Running

[Sampling_Setting]
variables       :   X,  Flat, 0.0,  5.0
                    Y,  Flat, 0.0,  5.0
                    ; Y1,  log, 0.01,  10.0
                    ; Y2,  log, 0.01,  10.0
                    ; Y3,  log, 0.01,  10.0
                    ; Y4,  log, 0.01,  10.0
                    ; Y5,  log, 0.01,  10.0
                    ; Y6,  log, 0.01,  10.0
                    ; Y7,  log, 0.01,  10.0
                    ; Y8,  log, 0.01,  10.0
                    ; Y9,  log, 0.01,  10.0
                    ; Y0,  log, 0.01,  10.0
                    ; X1,  Flat, 0,  5.0
                    ; X2,  Flat, 0,  5.0
                    ; X3,  Flat, 0,  5.0
                    ; X4,  Flat, 0,  5.0
                    ; X5,  Flat, 0,  5.0
                    ; X6,  Flat, 0,  5.0
                    ; X7,  Flat, 0,  5.0
                    ; X8,  Flat, 0,  5.0
                    ; X9,  Flat, 0,  5.0
                    ; X0,  Flat, 0,  5.0
min R           :   0.03
likelihood      :   log(Gauss(Z**4, 1, 0.6))
selection       :   (2.0 * X < Y)
; nlive_init      :   500
; nlive_batch     :   500
dlogz_init      :   0.03
; weight_pfrac    :   0.8
; stop_pfrac      :   1.0


[Config]
scheme          :   &J/src/card/preference.json

[Library_Settings]
OS required     :   linux, Darwin
make paraller   :   cpu_count
root required   :   True
root path       :   @C root-config --prefix
python version  :   2.7.3
package path    :   &J/External/Library
include         :   Delphes, HepMC, Pythia8, MadGraph

[Program_Settings]
package path    :   &J/External/Program
make paraller   :   2
include         :   TestFunction

[TestFunction]
required package:   None
clone shadow    :   True
install path    :   &J/WorkShop/Program/TestFunction
source file     :   &J/External/Program/TestFunction/TestFunction.py 
install cmd     :   cp $TestFunction:source file$ $TestFunction:install path$
prerun command  :   cp &J/External/Program/TestFunction/TestFunction_input.dat $TestFunction:install path$
run info        :   &J/WorkShop/Program/TestFunction/TestFunction_runweb.json 
command path    :   $TestFunction:install path$
excute command  :   rm output.json
                    ./TestFunction.py 
                    rm TestFunction_input.dat
input file      :   1,  $TestFunction:install path$/TestFunction_input.dat 
#                   varID   fileID  method
input variables :   X,      1,      Position,    1,  1
                    Y,      1,      Position,    1,  2
                    inFile, 1,      File,   save
output file     :   1,  $TestFunction:install path$/output.json
#                   varID   fileID  method
output variables:   Z,      1,      Json,   Z
                    Time,   1,      Json,   Time
                    outFile,1,      File
selection       :   (chi21 > 0)

[Function_01]
method          :   expression
name            :   chi21
expression      :   ( X**2 + Y**2 - 1 )**3           

[Function_02]
method          :   interpolate 1d
name            :   Xenon2019SD
file            :   &J/External/Info/Xenon1T2019SD_p.csv